DROP SEQUENCE REVIEW_SEQUENCE;

DROP TABLE REVIEW;
DROP TABLE MATCH_M;
DROP TABLE MAKE_M;
DROP TABLE MAKE_R;
DROP TABLE MAKE_S;
--TABLE 생성
CREATE TABLE REVIEW 
( NUM NUMBER(20) NOT NULL
, NAME VARCHAR2(20 BYTE) NOT NULL
, PASSWORD VARCHAR2(20 BYTE) NOT NULL
, CONTENT VARCHAR2(100 BYTE) NOT NULL 
, WRITE DATE NOT NULL
, HEART NUMBER(20) DEFAULT 0 
, CONSTRAINT REVIEW_PK PRIMARY KEY 
  (
    NUM 
  )
  ENABLE 
);
CREATE TABLE MATCH_M 
(
  PHONE VARCHAR2(50) NOT NULL 
, NAME VARCHAR2(50) NOT NULL 
, COUPON VARCHAR2(50) 
, CONSTRAINT MATCH_M_PK PRIMARY KEY 
  (
    PHONE 
  )
  ENABLE 
);

CREATE TABLE MAKE_M 
(
  PHONE VARCHAR2(50) NOT NULL 
, NAME VARCHAR2(50) NOT NULL 
, COUPON VARCHAR2(50) 
, CONSTRAINT MAKE_M_PK PRIMARY KEY 
  (
    PHONE 
  )
  ENABLE 
);

CREATE TABLE MAKE_R 
(
  CODE VARCHAR2(20) NOT NULL 
, TITLE VARCHAR2(50) NOT NULL 
, PERCENT NUMBER(10) NOT NULL 
, CONSTRAINT MAKE_R_PK PRIMARY KEY 
  (
    CODE 
  )
  ENABLE 
);

CREATE TABLE MAKE_S 
(
  NUM NUMBER NOT NULL 
, PHONE VARCHAR2(50) NOT NULL 
, HAMBURGER VARCHAR2(50) NOT NULL 
, DRINK VARCHAR2(50) NOT NULL 
, DESERT1 VARCHAR2(50) NOT NULL 
, DESERT2 VARCHAR2(50) NOT NULL 
, CHICKEN VARCHAR2(50) NOT NULL 
, CONSTRAINT MAKE_S_PK PRIMARY KEY 
  (
    NUM 
  )
  ENABLE 
);
--외래키 설정
ALTER TABLE MAKE_S
ADD CONSTRAINT MAKE_S_FK FOREIGN KEY
(
  PHONE 
)
REFERENCES MAKE_M
(
  PHONE 
)
ENABLE;


--SEQUENCE 생성
CREATE SEQUENCE REVIEW_SEQUENCE INCREMENT BY 1 START WITH 1 MINVALUE 1;
CREATE SEQUENCE MAKE_S_SEQUENCE INCREMENT BY 1 START WITH 1 MINVALUE 1;

--TRIGGER 생성
CREATE TRIGGER REVIEW_TRG 
BEFORE INSERT ON REVIEW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.NUM IS NULL THEN
      SELECT REVIEW_SEQUENCE.NEXTVAL INTO :NEW.NUM FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE TRIGGER MAKE_S_TRG 
BEFORE INSERT ON MAKE_S 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.NUM IS NULL THEN
      SELECT MAKE_S_SEQUENCE.NEXTVAL INTO :NEW.NUM FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
--VIEW 생성
CREATE VIEW REVIEW_MODIFY_VIEW
AS SELECT NUM, CONTENT
FROM REVIEW;

CREATE VIEW REVIEW_HEART_VIEW
AS SELECT NUM, HEART
FROM REVIEW;

--INDEX 생성
CREATE INDEX REVIEW_INDEX ON REVIEW (NUM DESC);

--INSERT 문
INSERT INTO "EVENT3617"."MAKE_R" (CODE, TITLE, PERCENT) VALUES ('1', '꽝', '90');
INSERT INTO "EVENT3617"."MAKE_R" (CODE, TITLE, PERCENT) VALUES ('2', '세트 업그레이드', '5');
INSERT INTO "EVENT3617"."MAKE_R" (CODE, TITLE, PERCENT) VALUES ('3', '오징어 버거 증정', '5');
INSERT INTO "EVENT3617"."MAKE_R" (CODE, TITLE, PERCENT) VALUES ('4', '10%할인 쿠폰', '5');
INSERT INTO "EVENT3617"."MAKE_R" (CODE, TITLE, PERCENT) VALUES ('5', '콘 아이스크림 증정', '5');
INSERT INTO "EVENT3617"."MAKE_R" (CODE, TITLE, PERCENT) VALUES ('6', '세트 사이즈 업그레이드', '5');
UPDATE REVIEW SET HEART = HEART + 1 WHERE NUM =1;
select * from make_S;
SELECT PHONE FROM MAKE_M WHERE PHONE = '010';
INSERT INTO MAKE_s ( PHONE, HAMBURGER, DRINK, DESERT1, DESERT2, CHICKEN) VALUES ('010','S','D','D','D','DD');
UPDATE REVIEW SET HEART = HEART + 1 WHERE NUM = 1;